import{_ as e,o as a,c as s,a as l}from"./app.2041a993.js";const b=JSON.parse('{"title":"快速开始","description":"","frontmatter":{},"headers":[{"level":2,"title":"vue-components-lib-seed 介绍","slug":"vue-components-lib-seed-介绍","link":"#vue-components-lib-seed-介绍","children":[]},{"level":2,"title":"文档","slug":"文档","link":"#文档","children":[]},{"level":2,"title":"特点","slug":"特点","link":"#特点","children":[]},{"level":2,"title":"怎样使用","slug":"怎样使用","link":"#怎样使用","children":[{"level":3,"title":"检查项","slug":"检查项","link":"#检查项","children":[]},{"level":3,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":3,"title":"开发模式","slug":"开发模式","link":"#开发模式","children":[]},{"level":3,"title":"构建","slug":"构建","link":"#构建","children":[]},{"level":3,"title":"测试","slug":"测试","link":"#测试","children":[]},{"level":3,"title":"生成入口文件","slug":"生成入口文件","link":"#生成入口文件","children":[]},{"level":3,"title":"生成一个新的组件","slug":"生成一个新的组件","link":"#生成一个新的组件","children":[]},{"level":3,"title":"生成 d.ts 文件","slug":"生成-d-ts-文件","link":"#生成-d-ts-文件","children":[]},{"level":3,"title":"发布你的组件库","slug":"发布你的组件库","link":"#发布你的组件库","children":[]}]},{"level":2,"title":"文档的构建","slug":"文档的构建","link":"#文档的构建","children":[{"level":3,"title":"开发文档","slug":"开发文档","link":"#开发文档","children":[]},{"level":3,"title":"构建文档","slug":"构建文档","link":"#构建文档","children":[]},{"level":3,"title":"部署文档","slug":"部署文档","link":"#部署文档","children":[]},{"level":3,"title":"在文档中使用组件 demo","slug":"在文档中使用组件-demo","link":"#在文档中使用组件-demo","children":[]},{"level":3,"title":"自定义文档样式","slug":"自定义文档样式","link":"#自定义文档样式","children":[]}]},{"level":2,"title":"推荐编辑器配置","slug":"推荐编辑器配置","link":"#推荐编辑器配置","children":[{"level":3,"title":"如果你使用 <script setup>","slug":"如果你使用-script-setup","link":"#如果你使用-script-setup","children":[]}]},{"level":2,"title":"此项目离不开以下开源项目","slug":"此项目离不开以下开源项目","link":"#此项目离不开以下开源项目","children":[]},{"level":2,"title":"特别感谢","slug":"特别感谢","link":"#特别感谢","children":[]}],"relativePath":"zh-CN/components/quick-start.md"}'),n={name:"zh-CN/components/quick-start.md"},t=l(`<h1 id="快速开始" tabindex="-1">快速开始 <a class="header-anchor" href="#快速开始" aria-hidden="true">#</a></h1><h2 id="vue-components-lib-seed-介绍" tabindex="-1">vue-components-lib-seed 介绍 <a class="header-anchor" href="#vue-components-lib-seed-介绍" aria-hidden="true">#</a></h2><p>帮助你快速创建组件库。</p><ul><li>🚀 使用 <code>Vite</code> 开发</li><li>✈️ 使用 <code>esbuild</code> 构建</li><li>🚁 用 <code>ts-morph</code> 生成类型</li></ul><h2 id="文档" tabindex="-1">文档 <a class="header-anchor" href="#文档" aria-hidden="true">#</a></h2><ul><li><a href="https://vuecomponent-seed.vercel.app/" target="_blank" rel="noreferrer">文档示例</a></li></ul><h2 id="特点" tabindex="-1">特点 <a class="header-anchor" href="#特点" aria-hidden="true">#</a></h2><ul><li>🌈 快速开发和构建</li><li>🎆 自定义友好</li><li>📝 更漂亮的文档，支持<code>中文</code>和<code>英文</code>。 受益于<a href="https://github.com/vueuse/vueuse" target="_blank" rel="noreferrer">vueuse</a>，支持 <code>暗黑模式</code>。</li><li>🍭 丰富的脚本，灵感来自 <a href="https://github.com/egoist/esbuild-plugin-vue" target="_blank" rel="noreferrer">esbuild-plugin-vue</a> &amp; <a href="https://github.com/egoist/vue-dts-gen" target="_blank" rel="noreferrer">vue-dts-gen</a></li><li>😋 类型友好</li><li>🚚 <code>ESM</code> 和 <code>CJS</code> 产品</li></ul><h2 id="怎样使用" tabindex="-1">怎样使用 <a class="header-anchor" href="#怎样使用" aria-hidden="true">#</a></h2><p><a href="https://github.com/zouhangwithsweet/vue-components-lib-seed/generate" target="_blank" rel="noreferrer">通过 vuecompoent-seed 生成你的仓库</a></p><h3 id="检查项" tabindex="-1">检查项 <a class="header-anchor" href="#检查项" aria-hidden="true">#</a></h3><ul><li>[ ] Replace all <code>my-lib</code> words with your libary name. Just search <code>my-lib</code> and replace them in VScode <ul><li><code>.gitignore</code></li><li><code>package.json</code></li><li><code>vite.config.ts</code></li><li><code>.vitepress</code></li><li><code>scripts</code> ...</li></ul></li></ul><h3 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-hidden="true">#</a></h3><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span></span>
<span class="line"></span></code></pre></div><h3 id="开发模式" tabindex="-1">开发模式 <a class="header-anchor" href="#开发模式" aria-hidden="true">#</a></h3><blockquote><p>Benefited from <a href="https://github.com/hannoeru/vite-plugin-pages" target="_blank" rel="noreferrer"><code>vite-plugin-pages</code></a>, the <code>src/pages/index.vue</code> is the entry page for development. You can visit <code>/[component-name]/demo</code> to check component, like <code>http://localhost:3000/#/button/demo</code>.</p></blockquote><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dev</span></span>
<span class="line"></span></code></pre></div><h3 id="构建" tabindex="-1">构建 <a class="header-anchor" href="#构建" aria-hidden="true">#</a></h3><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build</span></span>
<span class="line"></span></code></pre></div><h3 id="测试" tabindex="-1">测试 <a class="header-anchor" href="#测试" aria-hidden="true">#</a></h3><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">test</span></span>
<span class="line"></span></code></pre></div><h3 id="生成入口文件" tabindex="-1">生成入口文件 <a class="header-anchor" href="#生成入口文件" aria-hidden="true">#</a></h3><blockquote><p>入口文件是 rollup 的 <code>input</code> 选项。</p></blockquote><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">gen-entry</span></span>
<span class="line"></span></code></pre></div><h3 id="生成一个新的组件" tabindex="-1">生成一个新的组件 <a class="header-anchor" href="#生成一个新的组件" aria-hidden="true">#</a></h3><blockquote><p>您必须为此命令指定组件名称。</p></blockquote><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">gen</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">component\\&#39;s name</span><span style="color:#89DDFF;">]</span></span>
<span class="line"></span></code></pre></div><h3 id="生成-d-ts-文件" tabindex="-1">生成 d.ts 文件 <a class="header-anchor" href="#生成-d-ts-文件" aria-hidden="true">#</a></h3><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">esno</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">./scripts/gen-dts.ts</span></span>
<span class="line"></span></code></pre></div><h3 id="发布你的组件库" tabindex="-1">发布你的组件库 <a class="header-anchor" href="#发布你的组件库" aria-hidden="true">#</a></h3><blockquote><p>This command will add git tag、generate changelog. You can test your lib with argument <code>--dry</code></p></blockquote><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">release</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">--dry</span><span style="color:#89DDFF;">]</span></span>
<span class="line"></span></code></pre></div><h2 id="文档的构建" tabindex="-1">文档的构建 <a class="header-anchor" href="#文档的构建" aria-hidden="true">#</a></h2><blockquote><p>❗ Noted: you should run <code>yarn build:lib</code> before run this command. Because the docs need the build bundle.</p></blockquote><h3 id="开发文档" tabindex="-1">开发文档 <a class="header-anchor" href="#开发文档" aria-hidden="true">#</a></h3><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docs:dev</span></span>
<span class="line"></span></code></pre></div><h3 id="构建文档" tabindex="-1">构建文档 <a class="header-anchor" href="#构建文档" aria-hidden="true">#</a></h3><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docs:build</span></span>
<span class="line"></span></code></pre></div><h3 id="部署文档" tabindex="-1">部署文档 <a class="header-anchor" href="#部署文档" aria-hidden="true">#</a></h3><p>vuecompoent-seed 提供了一个 github <a href="https://github.com/zouhangwithsweet/vue-components-lib-seed/.github/workflows/build.yml" target="_blank" rel="noreferrer">action</a>。 当你将代码推送到 <code>master</code> 分支时，文档会自动部署在 <code>gh-pages</code> 分支上。然后你可以把 <code>gh-pages</code> 分支设置为 Github Pages 的来源。</p><h3 id="在文档中使用组件-demo" tabindex="-1">在文档中使用组件 demo <a class="header-anchor" href="#在文档中使用组件-demo" aria-hidden="true">#</a></h3><p>以 <code>button</code> 组件为例。</p><p>在 <code>button.md</code> 文件中, 插入如下代码：</p><div class="language-markdown"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">:::demo  </span></span>
<span class="line"><span style="color:#A6ACCD;">src/packages/button/demo/demo0.vue  </span></span>
<span class="line"><span style="color:#A6ACCD;">:::</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> or</span></span>
<span class="line"><span style="color:#A6ACCD;">:::demo  </span></span>
<span class="line"><span style="color:#A6ACCD;">src/packages/button/demo/demo*.vue  </span></span>
<span class="line"><span style="color:#A6ACCD;">:::</span></span>
<span class="line"></span></code></pre></div><p><s>vuecomponent-sedd 提供了一个全局组件 <a href="https://github.com/zouhangwithsweet/fisand-doc/blob/feat_fisand_doc/src/client/app/components/Demos.vue" target="_blank" rel="noreferrer"><code>Demos</code></a> 用来展示所有的组件示例。 这也是当前展示组件实例的唯一方式。 <a href="https://github.com/zouhangwithsweet/fisand-doc/blob/feat_fisand_doc/src/node/markdown/plugins/demo.ts" target="_blank" rel="noreferrer">了解更多</a>.</s></p><h3 id="自定义文档样式" tabindex="-1">自定义文档样式 <a class="header-anchor" href="#自定义文档样式" aria-hidden="true">#</a></h3><p>你可以在 <code>markdown</code> 文件的 <code>frontmatter</code> 新增 <code>class</code> 字段, 全局组件 <code>&lt;Content&gt;</code> 将会继承你定义的 <code>class</code>。 当然, <code>unocss</code> 也能在这里使用。</p><div class="language-markdown"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">---</span></span>
<span class="line"><span style="color:#F07178;">class</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">custom-class</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">---</span></span>
<span class="line"></span></code></pre></div><h2 id="推荐编辑器配置" tabindex="-1">推荐编辑器配置 <a class="header-anchor" href="#推荐编辑器配置" aria-hidden="true">#</a></h2><p><a href="https://code.visualstudio.com/" target="_blank" rel="noreferrer">VSCode</a> + <a href="https://github.com/johnsoncodehk/volar" target="_blank" rel="noreferrer">Volar</a>.</p><h3 id="如果你使用-script-setup" tabindex="-1">如果你使用 <code>&lt;script setup&gt;</code> <a class="header-anchor" href="#如果你使用-script-setup" aria-hidden="true">#</a></h3><p><a href="https://github.com/vuejs/rfcs/pull/227" target="_blank" rel="noreferrer"><code>&lt;script setup&gt;</code></a> is a feature that is currently in RFC stage. To get proper IDE support for the syntax, use <a href="https://marketplace.visualstudio.com/items?itemName=johnsoncodehk.volar" target="_blank" rel="noreferrer">Volar</a> instead of Vetur (and disable Vetur).</p><h2 id="此项目离不开以下开源项目" tabindex="-1">此项目离不开以下开源项目 <a class="header-anchor" href="#此项目离不开以下开源项目" aria-hidden="true">#</a></h2><ul><li><a href="https://github.com/sxzz/unplugin-vue" target="_blank" rel="noreferrer">unplugin-vue</a></li><li><a href="https://github.com/egoist/esbuild-plugin-vue" target="_blank" rel="noreferrer">esbuild-plugin-vue</a></li><li><a href="https://github.com/egoist/vue-dts-gen" target="_blank" rel="noreferrer">vue-dts-gen</a></li><li><a href="https://github.com/vueuse/vueuse" target="_blank" rel="noreferrer">vueuse</a></li><li><a href="https://github.com/dewfall123/vitepress-for-component" target="_blank" rel="noreferrer">vitepress-for-component</a></li><li><a href="https://github.com/unocss/unocss" target="_blank" rel="noreferrer">unocss</a></li><li><a href="https://github.com/element-plus/element-plus" target="_blank" rel="noreferrer">Element Plus</a></li></ul><h2 id="特别感谢" tabindex="-1">特别感谢 <a class="header-anchor" href="#特别感谢" aria-hidden="true">#</a></h2><table><thead><tr><th style="text-align:center;"><a href="https://github.com/eeeeelle" target="_blank" rel="noreferrer"><img src="https://avatars.githubusercontent.com/u/73626725?v=4" width="75px;"><br>eeeeelle<br> <sub>✍️ 发布脚本</sub></a></th></tr></thead></table>`,56),o=[t];function r(i,c,p,d,h,u){return a(),s("div",null,o)}const m=e(n,[["render",r]]);export{b as __pageData,m as default};
